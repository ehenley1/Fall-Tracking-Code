import cv2
import numpy as np

def blur_faces(frame, faces, k=30):
    for (x, y, w, h) in faces:
        face = frame[y:y+h, x:x+w]
        blurred_face = cv2.GaussianBlur(face, (99, 99), 30)
        frame[y:y+h, x:x+w] = blurred_face
    return frame

# Load the cascade
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

# Open the video
cap = cv2.VideoCapture('video.mp4') # replace 'video.mp4' with your video file

# Get video properties
frame_width = int(cap.get(3))
frame_height = int(cap.get(4))

# Define the codec and create a VideoWriter object
fourcc = cv2.VideoWriter_fourcc(*'DIVX') 
out = cv2.VideoWriter('blurred_faces_output.avi', fourcc, 20.0, (frame_width,frame_height))

while True:
    # Read the frame
    ret, img = cap.read()
    if not ret:
        break

    # Convert to grayscale
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # Detect the faces
    faces = face_cascade.detectMultiScale(gray, 1.1, 4)

    # Blur the faces
    img = blur_faces(img, faces)

    # Write the frame into the file
    out.write(img)

    # Display
    cv2.imshow('img', img)

    # Stop if escape key is pressed
    k = cv2.waitKey(30) & 0xff
    if k==27:
        break

# Release the VideoCapture and VideoWriter objects
cap.release()
out.release()
cv2.destroyAllWindows()
